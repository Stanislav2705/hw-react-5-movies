{"version":3,"file":"static/js/387.2d46d3d9.chunk.js","mappings":"4OAEaA,EAAOC,EAAAA,GAAAA,GAAH,4PAcJC,EAAQD,EAAAA,GAAAA,GAAH,8DAKLE,EAAOF,EAAAA,GAAAA,EAAH,sC,SCdF,SAASG,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAASI,KAAKL,EAC3B,GAAE,CAACC,KAGF,SAACR,EAAD,UAC+B,KAArB,OAAPM,QAAO,IAAPA,OAAA,EAAAA,EAASO,QAAQC,SAChB,SAACX,EAAD,wDADD,OAGCG,QAHD,IAGCA,OAHD,EAGCA,EAASO,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClC,OACE,2BACE,SAAChB,EAAD,UAAQe,KACR,SAACd,EAAD,UAAOe,MAFAF,EAKZ,KAIR,C,mMC7BKG,EAAW,+BACXC,EAAQ,sBACRC,EAAS,eACTC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACgBC,EAAAA,GAAAA,IAAA,UAChBN,EADgB,YACJC,EADI,oBACaE,EADb,iBAC6BE,IAF7C,cACCE,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BC,EAAML,GAAlC,uFACgBC,EAAAA,GAAAA,IAAA,UAChBN,EADgB,YACJE,EADI,oBACcC,EADd,kBAC+BO,EAD/B,iBAC6CL,IAF7D,cACCE,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,uFACgBS,EAAAA,GAAAA,IAAA,UAChBN,EADgB,kBACEH,EADF,oBACgBM,IAFhC,cACCI,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bf,GAA9B,gGAEkBS,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAH,EADA,4BACsBM,IAHxC,cAEGI,EAFH,yBAKEA,EAAOC,MALT,gCAOHK,QAAQC,IAAI,KAAMC,SAPf,gFAYA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BK,GAA3B,gGAEkBS,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAH,EADA,4BACsBM,IAHxC,cAEGI,EAFH,yBAKIA,EAAOC,MALX,gCAOHK,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","fakeApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  @media screen and (max-width: 420px) {\n    text-align: center;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n","import { reviewsFilm } from \"fakeApi\";\nimport { useEffect,useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { List, Text, Title } from \"./Reviews.styled\";\n\n\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    reviewsFilm(movieId).then(setReviews)\n  }, [movieId])\n\n  return (\n    <List>\n      {reviews?.results.length === 0 ? (\n        <Text>We don't have any reviews for this movie.</Text>\n      ) : (\n        reviews?.results.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <Title>{author}</Title>\n              <Text>{content}</Text>\n            </li>\n          );\n        })\n      )}\n    </List>\n  );\n}\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\"\nconst TREND = \"trending/movie/week\"\nconst SEARCH = \"search/movie\"\nconst API_KEY = \"cb5d99917b11063d4e60e6f353e2f3b8\"\n\nexport async function fetchTrendMovies(page) {\n  const result = await axios.get(\n    `${BASE_URL}/${TREND}?api_key=${API_KEY}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function searchMovies(query,page) {\n  const result = await axios.get(\n    `${BASE_URL}/${SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  )\n  return result.data\n}\n\nexport async function castActorsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  )\n  return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n\n}\n\nexport async function reviewsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n"],"names":["List","styled","Title","Text","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","reviewsFilm","then","results","length","map","id","author","content","BASE_URL","TREND","SEARCH","API_KEY","fetchTrendMovies","page","axios","result","data","searchMovies","query","getMovieDetails","castActorsFilm","console","log","message"],"sourceRoot":""}