{"version":3,"file":"static/js/961.caf5404e.chunk.js","mappings":"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","sources":["fakeApi.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\"\nconst TREND = \"trending/movie/week\"\nconst SEARCH = \"search/movie\"\nconst API_KEY = \"cb5d99917b11063d4e60e6f353e2f3b8\"\n\nexport async function fetchTrendMovies(page) {\n  const result = await axios.get(\n    `${BASE_URL}/${TREND}?api_key=${API_KEY}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function searchMovies(query,page) {\n  const result = await axios.get(\n    `${BASE_URL}/${SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  )\n  return result.data\n}\n\nexport async function castActorsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  )\n  return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n\n}\n\nexport async function reviewsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n","import { getMovieDetails } from \"fakeApi\";\nimport { useState, useEffect, Suspense } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport defaultImage from '../../Image/default-poster.jpg'\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport Loader from \"shared/Loader/Loader\";\n\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const [loading, setloading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    async function movieById() {\n      setloading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie({ ...data });\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setloading(false);\n      }\n    }\n    movieById();\n  }, [movieId]);\n\n  const isCast = location.pathname.includes('cast');\n  const castLink = isCast ? `/movies/${movieId}` : 'cast';\n  const isReviews = location.pathname.includes('reviews');\n  const reviewsLink = isReviews ? `/movies/${movieId}` : 'reviews';\n\n  const { original_title, genres, overview, poster_path, release_date, vote_average } = movie;\n  const genre = genres?.map(a => a.name).join(', ');\n  const voteAverage = Math.ceil(vote_average * 10);\n  const date = release_date?.slice(0, 4);\n  const backLink = location.state?.from ?? '/movies';\n  const IMG = poster_path ? `${IMG_URL}/${poster_path}` : defaultImage;\n\n  return (\n    <>\n      <Link to={backLink}>\n        <IoIosArrowBack/>\n        Go back\n      </Link>\n\n      {loading && <Loader />}\n      <div>\n        <img src={IMG} width=\"300\" alt={original_title} />\n        <div>\n          <title>\n            {original_title} ({date ? date : \"NOT TITLE\"})\n          </title>\n          <p>User score: {voteAverage}%</p>\n          <p>Overview</p>\n          <p>{overview}</p>\n          <p>Genres</p>\n          <p>{genre}</p>\n        </div>\n        </div>\n        <div>\n          <title>Additional information</title>\n          <ul>\n            <li>\n              <Link to={castLink} state={{ from: backLink }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to={reviewsLink} state={{ from: backLink }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense>\n    </>\n  )\n}\n"],"names":["BASE_URL","TREND","SEARCH","API_KEY","fetchTrendMovies","page","axios","result","data","searchMovies","query","getMovieDetails","id","castActorsFilm","console","log","message","reviewsFilm","MovieDetails","useState","movie","setMovie","loading","setloading","movieId","useParams","location","useLocation","useEffect","movieById","castLink","pathname","includes","reviewsLink","original_title","genres","overview","poster_path","release_date","vote_average","genre","map","a","name","join","voteAverage","Math","ceil","date","slice","backLink","state","from","IMG","defaultImage","to","src","width","alt","Suspense","fallback"],"sourceRoot":""}