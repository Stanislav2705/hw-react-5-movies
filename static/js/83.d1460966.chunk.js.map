{"version":3,"file":"static/js/83.d1460966.chunk.js","mappings":"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","sources":["components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","fakeApi.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px 16px;\n  border: none;\n  background-color: #fd8b08ed;\n  outline: none;\n  color: white;\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0px auto;\n  margin-bottom: 40px;\n`\n","import { useContext } from \"react\"\nimport { PageContext } from \"shared/PageContext/PageContext\";\nimport { Button } from \"./LoadMore.styled\";\n\n\nexport default function LoadMore() {\n  const { setPage } = useContext(PageContext);\n\n  function onLoadMore() {\n    setPage(page => page + 1);\n  }\n\n  return (\n    <Button type=\"button\" onClick={onLoadMore}>Load More</Button>\n  )\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ListItem = styled.li`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  width: 260px;\n  margin-bottom: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (min-width: 420px) {\n    width: calc((100% - 1 * 16px) / 2);\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 2 * 16px) / 3);\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 4 * 16px) / 5);\n  }\n`\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover,&:focus {\n    color: #fd8b08ed;\n  }\n`\nexport const Title = styled.h3`\n  font-weight: 400;\n  margin: 0;\n  padding: 10px;\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n  }\n`\nexport const Img = styled.img`\n  width: 100%;\n  height: 350px;\n  object-fit: cover;\n`\nexport const Span = styled.span`\n  font-weight: 100;\n`\n","import { useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\nimport { LinkItem, ListItem, Title,Span,Img } from \"./MovieItem.styled\";\nimport  defaultImage  from '../../Image/default-poster.jpg';\n\nexport default function MovieItem({ id, original_title,poster_path,release_date }) {\n  const location = useLocation();\n  const date = release_date ? <Span>({release_date.slice(0, 4)})</Span> : '';\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const IMG = poster_path ? `${IMG_URL}/${poster_path}` : defaultImage;\n\n  return (\n    <ListItem>\n      <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n        <Img src={IMG} alt='' />\n        <Title>\n          {original_title} {date}\n        </Title>\n      </LinkItem>\n    </ListItem>\n  )\n}\n\nMovieItem.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title:PropTypes.string.isRequired,\n  })\n).isRequired;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: block;\n  padding: 16px 0px;\n  margin-left: auto;\n  margin-right: auto;\n\n  list-style: none;\n  @media screen and (min-width: 420px) {\n    display: flex;\n    gap: 16px;\n    flex-wrap: wrap;\n    padding-left: 0;\n  }\n`\n","// import { Link, useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\n\nimport MovieItem from \"components/MovieItem/MovieItem\"\nimport { List } from './MovieList.styled';\n\n\nexport default function MovieList({ movies }) {\n\n  return (\n    <>\n      <List>\n      {movies.map(movie => {\n        return <MovieItem key={movie.id} {...movie} />\n      })}\n      </List>\n    </>\n  )\n}\n\nMovieList.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n      movies:PropTypes.string.isRequired,\n  })\n).isRequired;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\"\nconst TREND = \"trending/movie/week\"\nconst SEARCH = \"search/movie\"\nconst API_KEY = \"cb5d99917b11063d4e60e6f353e2f3b8\"\n\nexport async function fetchTrendMovies(page) {\n  const result = await axios.get(\n    `${BASE_URL}/${TREND}?api_key=${API_KEY}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function searchMovies(query,page) {\n  const result = await axios.get(\n    `${BASE_URL}/${SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  )\n  return result.data\n}\n\nexport async function castActorsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  )\n  return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n\n}\n\nexport async function reviewsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  align-items: center;\n  text-align: center;\n`\n\nexport const Block = styled.div`\n  display: block;\n  @media screen and (max-width: 420px) {\n    padding-right: 40px\n  }\n`\nexport const Button = styled.button`\n  position: absolute;\n  align-items: center;\n  outline: none;\n  height: 34px;\n  width: 40px;\n  justify-content: center;\n  border: 1px solid black;\n  border-top-right-radius: 7px;\n  border-bottom-right-radius: 7px;\n  background-color: white;\n  border: 1px solid black;\n  cursor: pointer;\n  :hover {\n    background-color: #fd8b08ed;\n    color: white;\n  }\n`\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  padding: 6px;\n  outline: none;\n  border: 1px solid black;\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n  @media screen and (min-width: 420px) {\n    width: 300px;\n  }\n`\n","import PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Notify } from 'notiflix';\nimport { Block, Button, Form, Input } from './SearchBox.styled';\n\nexport default function SearchBox({ submit }) {\n  const [movieName, setMovieName] = useState('');\n\n  function handleChange(e) {\n    setMovieName(e.target.value.toLowerCase());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      return Notify.warning(\"Fill this field\");\n    }\n\n    submit({ movieName });\n    reset();\n  }\n\n  function reset() {\n    setMovieName('');\n  }\n\n  return (\n      <Form\n        onSubmit={handleSubmit}\n      >\n        <Block>\n          <Input\n            name=\"movieName\"\n            value={movieName}\n            type=\"text\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            // autoFocus\n            placeholder=\"Search movie\"\n        />\n        <Button type=\"submit\">\n            <AiOutlineSearch size='20'/>\n        </Button>\n        </Block>\n      </Form>\n  );\n};\n\nSearchBox.propTypes = {\n    submit: PropTypes.func.isRequired,\n};\n","import MovieList from \"components/MovieList/MovieList\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from 'fakeApi';\nimport Loader from 'shared/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport { useContext } from 'react';\nimport { PageContext } from 'shared/PageContext/PageContext';\n\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const { page } = useContext(PageContext);\n  const [totalPages, setTotalPages] = useState(null);\n  const [loading, setLoading] = useState(false)\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovie = searchParams.get(\"name_film\") ?? \"\";\n\n  useEffect(() => {\n    async function getMoviesByQuery() {\n      setLoading(true);\n      try {\n        const data = await searchMovies(nameMovie,page);\n        if (data.total_results === 0) {\n          return Notify.failure('No such films');\n        }\n        setMovies(prev => [...prev, ...data.results]);\n        const totalPages = Math.ceil(data.total_results / 20);\n        setTotalPages(totalPages);\n        if (page >= totalPages) {\n          Notify.warning(\n            \"We're sorry, but you've reached the end of search results.\"\n          )\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (nameMovie) {\n      getMoviesByQuery();\n    }\n  }, [nameMovie,page])\n\n\n  function handleSubmit({ movieName }) {\n    setMovies([]);\n    setSearchParams({ name_film: movieName });\n  };\n\n  const isFilms = movies?.length !== 0;\n  const endList = page < totalPages;\n\n\n  return (\n    <>\n      <SearchBox submit={handleSubmit} />\n      {movies && <MovieList movies={movies} />}\n      {loading ? <Loader/> : endList && isFilms && <LoadMore/>}\n    </>\n  )\n}\n"],"names":["Button","styled","LoadMore","setPage","useContext","PageContext","type","onClick","page","ListItem","LinkItem","Link","Title","Img","Span","MovieItem","id","original_title","poster_path","release_date","location","useLocation","date","slice","IMG","defaultImage","to","state","from","src","alt","List","MovieList","movies","map","movie","BASE_URL","TREND","SEARCH","API_KEY","fetchTrendMovies","axios","result","data","searchMovies","query","getMovieDetails","castActorsFilm","console","log","message","reviewsFilm","Form","Block","Input","SearchBox","submit","useState","movieName","setMovieName","onSubmit","e","preventDefault","trim","Notify","name","value","autoComplete","onChange","target","toLowerCase","placeholder","size","Movies","setMovies","totalPages","setTotalPages","loading","setLoading","useSearchParams","searchParams","setSearchParams","nameMovie","get","useEffect","total_results","prev","results","Math","ceil","getMoviesByQuery","isFilms","length","endList","name_film","Loader"],"sourceRoot":""}