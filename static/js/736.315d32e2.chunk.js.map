{"version":3,"file":"static/js/736.315d32e2.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,+GAQJC,EAAWD,EAAAA,GAAAA,GAAH,soBAuBRE,EAAQF,EAAAA,GAAAA,GAAH,qDAKLG,EAAOH,EAAAA,GAAAA,EAAH,qDAKJI,EAAMJ,EAAAA,GAAAA,IAAH,wC,SCpCD,SAASK,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,KAAKL,EAC9B,GAAE,CAACC,IAIJ,OACE,SAACV,EAAD,iBACGQ,QADH,IACGA,OADH,EACGA,EAAQO,KAAKC,KAAI,YAA0D,IAAvDC,EAAsD,EAAtDA,KAAKC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aAChDC,EAAMD,EAAY,UALd,kCAKc,YAAiBA,GAAiBE,EAC1D,OACE,UAACrB,EAAD,YACE,SAACG,EAAD,CAAKmB,IAAKF,EAAKG,IAAKP,EAAeQ,MAAM,SACzC,SAACvB,EAAD,UAAQc,KACR,mBACA,UAACb,EAAD,0BAAmBe,GAAwB,WAA3C,SAJaC,EAOlB,KAGN,C,mMC9BKO,EAAW,+BACXC,EAAQ,sBACRC,EAAS,eACTC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACgBC,EAAAA,GAAAA,IAAA,UAChBN,EADgB,YACJC,EADI,oBACaE,EADb,iBAC6BE,IAF7C,cACCE,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BC,EAAML,GAAlC,uFACgBC,EAAAA,GAAAA,IAAA,UAChBN,EADgB,YACJE,EADI,oBACcC,EADd,kBAC+BO,EAD/B,iBAC6CL,IAF7D,cACCE,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlB,GAA/B,uFACgBa,EAAAA,GAAAA,IAAA,UAChBN,EADgB,kBACEP,EADF,oBACgBU,IAFhC,cACCI,EADD,yBAIEA,EAAOC,MAJT,kEAOA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BO,GAA9B,gGAEkBa,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAP,EADA,4BACsBU,IAHxC,cAEGI,EAFH,yBAKEA,EAAOC,MALT,gCAOHI,QAAQC,IAAI,KAAMC,SAPf,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BtB,GAA3B,gGAEkBa,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAP,EADA,4BACsBU,IAHxC,cAEGI,EAFH,yBAKIA,EAAOC,MALX,gCAOHI,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","fakeApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.25);\n  }\n  @media screen and (min-width: 420px) {\n    width: calc((100% - 1 * 10px) / 2);\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 3 * 10px) / 4);\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 4 * 10px) / 6);\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n","import { castActorsFilm } from \"fakeApi\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport defaultImage from \"../../Image/default-poster.jpg\"\nimport { Img, List, ListItem, Text, Title } from \"./Cast.styled\";\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    castActorsFilm(movieId).then(setActors);\n  }, [movieId])\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {actors?.cast.map(({ name,original_name, character, id, profile_path }) => {\n        const IMG = profile_path ? `${IMG_URL}/${profile_path}` : defaultImage\n        return (\n          <ListItem key={id}>\n            <Img src={IMG} alt={original_name} width='160' />\n            <Title>{name}</Title>\n            <br/>\n            <Text>Character: ({character ? character : \"Not info\"})</Text>\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\"\nconst TREND = \"trending/movie/week\"\nconst SEARCH = \"search/movie\"\nconst API_KEY = \"cb5d99917b11063d4e60e6f353e2f3b8\"\n\nexport async function fetchTrendMovies(page) {\n  const result = await axios.get(\n    `${BASE_URL}/${TREND}?api_key=${API_KEY}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function searchMovies(query,page) {\n  const result = await axios.get(\n    `${BASE_URL}/${SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n  )\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  )\n  return result.data\n}\n\nexport async function castActorsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  )\n  return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n\n}\n\nexport async function reviewsFilm(id) {\n  try {\n    const result = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return result.data;\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n"],"names":["List","styled","ListItem","Title","Text","Img","Cast","useState","actors","setActors","movieId","useParams","useEffect","castActorsFilm","then","cast","map","name","original_name","character","id","profile_path","IMG","defaultImage","src","alt","width","BASE_URL","TREND","SEARCH","API_KEY","fetchTrendMovies","page","axios","result","data","searchMovies","query","getMovieDetails","console","log","message","reviewsFilm"],"sourceRoot":""}